name: cypress
run-name: test [${{ inputs.host }}]

on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
    inputs:
      host:
        description: 'host'
        default: 'www.sunhotels.com/en'

  workflow_call:

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    # container: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: get host
        run: |
          host="${{ inputs.host }}"
          if [ -z "$host" ]; then
            echo "BASE_URL=https://www.sunhotels.com/en" >> $GITHUB_ENV
          else
            echo "BASE_URL=https://$host" >> $GITHUB_ENV
          fi

      - name: run cypress on ${{ env.BASE_URL }} ðŸ§ª
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v6
        with:
          # Records to Cypress Cloud 
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          record: true
          command: npm run test:ci
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo â†’ Settings â†’ Secrets â†’ Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          # Test user credentials
          CYPRESS_sunhotelsUsername: ${{ secrets.CYPRESS_SUNHOTELSUSERNAME }}
          CYPRESS_sunhotelsPassword: ${{ secrets.CYPRESS_SUNHOTELSPASSWORD }}
          CYPRESS_extranetUsername: ${{ secrets.CYPRESS_EXTRANETUSERNAME }}
          CYPRESS_extranetPassword: ${{ secrets.CYPRESS_EXTRANETPASSWORD }}

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      - uses: actions/upload-artifact@v3
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore

      - name: Set release date for apply notification
        id: get-date
        if: steps.check-output.outputs.changes == 'true'
        run: echo "date=$(date +"%D, %H:%I")" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Send notification to Teams Stage channel
        # if: steps.check-output.outputs.changes == 'true'
        uses: simbo/msteams-message-card-action@v1.4.3
        with:
          webhook: ${{ secrets.TEAMS_WEBHOOK }}
          title: "This is the title"
          message: <p>a <strong>test automation</strong> action has been run on this environment</p>
          color: 228b22
          buttons: |
            Workflow log ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          sections: |
            -
              activity:
                title: ${{ github.actor }}
                subtitle: ${{ steps.get-date.outputs.date }} GMT
                image: https://avatars.githubusercontent.com/u/${{ github.actor_id }}
              facts:
                -
                  name: "Repository:"
                  value: ${{ github.repository }}
